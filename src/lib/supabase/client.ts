import { createClient } from '@supabase/supabase-js'
// Get Supabase credentials from environment variables or the autogenerated info file
import { projectId, publicAnonKey } from '../../utils/supabase/info'

const supabaseUrl = `https://${projectId}.supabase.co`
const supabaseAnonKey = publicAnonKey

// Validate that we have the required credentials
if (!supabaseUrl || !supabaseAnonKey) {
  throw new Error('Missing Supabase credentials. Please check your configuration.')
}

// Create a single Supabase client instance for the frontend with enhanced configuration
export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    // Automatically refresh tokens when they expire
    autoRefreshToken: true,
    // Persist session data in localStorage
    persistSession: true,
    // Detect session changes in other tabs
    detectSessionInUrl: true,
    // Add flow type for OAuth
    flowType: 'pkce'
  },
  // Global error handling
  global: {
    headers: {
      'X-Client-Info': 'NeevaAI/1.0'
    }
  },
  // Configure request timeouts
  realtime: {
    timeout: 10000, // 10 seconds
  }
})

export type SupabaseClient = typeof supabase